allure:
    {
      'allure_descrption': '',
      'allure_suite': '管理端',
      'allure_sub_suite': '考试模块',
      'allure_feature': '管理端',
      'allure_story': '考试模块'
    }
test:
-   name: 【普通考试】——查询考试列表
    request:
        url: api/v1/exam/exam
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            menuType: 3,
            page: 1,
            pageSize: 10
          }
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-基本信息-人脸识别规则
    request:
        url: api/v1/system/rule-config/key
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            key: 'FACE_CONFIG'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——新增考试-基本信息-生成考试id
    request:
        url: api/v1/exam/exam/virtual-id
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
        examId: $.virtualExamId
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-基本信息-获取所有设备类型
    request:
        url: api/v1/exam/equipment-type/all
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-基本信息-考试开始时间
    request:
        url: api/v1/exam/exam/remote-startTime
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-基本信息-获取推荐标签
    request:
        url: api/v1/system/topic/hot
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            type: 6,
            limit: 10
          }
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-基本信息-获取最高授权组织
    request:
        url: api/v1/system/organization/max-grant-organization
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            uri: 'exam/exam'
          }
    sql_statement:
    extract:
        organizationId: $.id
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——新增考试-基本信息-上传考试封面
    request:
        url: api/v1/system/file/cropper-upload
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            image: 'data:image/png;base64,$base_64{exam/考试封面.jpg}'
          }
    sql_statement:
    extract:
        coverId: $.imgId
        coverIdPath: $.path
    validate:
        -   eq:  ['$.msg', 'success']

-   name: 【普通考试】——新增考试-基本信息-查询封面图片
    request:
        url: admin/${coverIdPath}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-基本信息-查询标签类型
    request:
        url: api/v1/system/topic-type
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            status: 1,
            organizationId: '${organizationId}'
          }
    sql_statement:
    extract:
        typeId: $.[0].id
    validate:
        -   eq:  ['$.[0].status', '1']

-   name: 【普通考试】——新增考试-基本信息-查询正式类型标签
    request:
        url: api/v1/system/topic/select
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            typeId: '${typeId}'
          }
    sql_statement:
    extract:
        topicId1: $.[0].id
        topicId2: $.[1].id
        topicId3: $.[2].id
        topicId4: $.[3].id
        topicId5: $.[4].id
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-查询授权组织
    request:
        url: api/v1/system/organization/granted-organization
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            operatorType: 2,
            supportMore: 'false',
            uri: 'exam/exam'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].status', '1']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-查询最高授权节点
    request:
        url: api/v1/system/organization/max-grant-organization
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            uri: 'exam/exam'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-查询首个试题目录
    request:
        url: api/v1/exam/question-depot
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            operatorType: 2,
            organizationId: '${organizationId}',
            state: 1,
            autoFill: 'true',
            type: 1,
            depotShare: 1
          }
    sql_statement:
    extract:
         questionDepotId: $.[1].id
         questionDepotName: $.[1].name
    validate:
        -   eq:  ['$.[0].state', '1']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-上传单选题图片
    request:
        url: api/v1/system/file/upload?dir=image
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
        files:
          {
            file: 'exam/试题图片.jpg'
          }
    sql_statement:
    extract:
        imgurl: $.url
    validate:
        -   eq:  ['$.error', '0']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-新增单选题
    request:
        url: api/v1/exam/question/other
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            value: [{'value': 'A','valueText': 'A','name': 0,'type': 0},{'value': 'B','valueText': 'B', 'name': 1,
                     'type':1},{'value':'C','valueText':'C','name':2,'type':1},{'value':'D','valueText':'D',
                     'name':3,'type':1}],
            'questionAttrs[0][value]': 'A',
            'questionAttrs[0][valueText]': 'A',
            'questionAttrs[0][name]': 0,
            'questionAttrs[0][type]': 0,
            'questionAttrs[1][value]': 'B',
            'questionAttrs[1][valueText]': 'B',
            'questionAttrs[1][name]': 1,
            'questionAttrs[1][type]': 1,
            'questionAttrs[2][value]': 'C',
            'questionAttrs[2][valueText]': 'C',
            'questionAttrs[2][name]': 2,
            'questionAttrs[2][type]': 1,
            'questionAttrs[3][value]': 'D',
            'questionAttrs[3][valueText]': 'D',
            'questionAttrs[3][name]': 3,
            'questionAttrs[3][type]': 1,
            content: '【单选题】试题信息$date_time{}<img src="${imgurl}" />',
            contentText: '【单选题】试题信息$date_time{}<img src="${imgurl}" />',
            score: 1000,
            type: 1,
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            organizationId: '${organizationId}',
            'organization[id]': '${organizationId}',
            'organization[name]': '${organizationName}',
            parsing: '【单选题】试题解析',
            parsingText: '【单选题】试题解析',
            difficulty: 3,
            isTemp: 1,
            depotEdit: 0
          }
    sql_statement:
    extract:
        danxuantiId: $.id
        danxuantiName: $.content
        danxuantiDifficulty: $.difficulty
    validate:
        -   eq:  ['$.type', '1']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-获取音频fileKey
    request:
        url: api/v1/human/sharding-file/auth/get-upload-files
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            fileKey: '$md_5{exam/试题音频.mp3, path_name(), file_size()}'
          }
    sql_statement:
    extract:
        mp3fileKey: $.fileKey
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-上传多选题音频
    request:
        url: api/v1/human/sharding-file/auth/upload-parse-file
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            fileKey: '${mp3fileKey}',
            fileOrder: 1,
            flag: 2,
            fileName: '$file_name{exam/试题音频.mp3}',
            contentType: 'audio/mpeg',
            convert: 'true',
            notifyUrl: '${ent_url}/api/v1/human/file/cloud/upload-merge',
            companyId: '${organizationId}',
            fileChunks: 1,
            fileSize: 1200080,
            configId: 'undefined'
          }
        files:
          {
            file: 'exam/试题音频.mp3'
          }
    sql_statement:
    extract:
        audioId: $.[0].id
    validate:
        -   eq:  ['$.[0].contentType', 'audio/mpeg']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-音频转换
    request:
        url: api/v1/course-study/transform-queue
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            ids: '${audioId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].translateFlag', '3']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-新增多选题
    request:
        url: api/v1/exam/question/other
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        body:
            {
              value: [{'value':'A','valueText':'A','name':0,'type':0},{'value':'B','valueText':'B', 'name':1,
                       'type':0},{'value':'C','valueText':'C','name':2,'type':2},{'value':'D','valueText':'D',
                       'name':3,'type':2}],
              'questionAttrs[0][value]': 'A',
              'questionAttrs[0][valueText]': 'A',
              'questionAttrs[0][name]': 0,
              'questionAttrs[0][type]': 0,
              'questionAttrs[1][value]': 'B',
              'questionAttrs[1][valueText]': 'B',
              'questionAttrs[1][name]': 1,
              'questionAttrs[1][type]': 0,
              'questionAttrs[2][value]': 'C',
              'questionAttrs[2][valueText]': 'C',
              'questionAttrs[2][name]': 2,
              'questionAttrs[2][type]': 2,
              'questionAttrs[3][value]': 'D',
              'questionAttrs[3][valueText]': 'D',
              'questionAttrs[3][name]': 3,
              'questionAttrs[3][type]': 2,
              content: "【多选题】试题信息$date_time{}<img id='preview-${audioId},$file_name{exam/试题音频.mp3},mp3' class='video-img' style='display:block;width:302px;height:170px;' data-type='mp3' data-name='$file_name{exam/试题音频.mp3}' data-id='${audioId}' src='${ent_url}/admin/images/preview-media.jpg' />",
              contentText: "【多选题】试题信息$date_time{}<img id='preview-${audioId},$file_name{exam/试题音频.mp3},mp3' class='video-img' style='display:block;width:302px;height:170px;' data-type='mp3' data-name='$file_name{exam/试题音频.mp3}' data-id='${audioId}' src='${ent_url}/admin/images/preview-media.jpg' />",
              score: 1000,
              type: 2,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '【多选题】试题解析',
              parsingText: '【多选题】试题解析',
              difficulty: 3,
              isTemp: 1,
              depotEdit: 0
            }
    extract:
      duoxuantiId: $.id
      duoxuantiName: $.content
      duoxuantiDifficulty: $.difficulty
    validate:
      -   eq:  ['$.type', '2']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-获取视频fileKey
    request:
        url: api/v1/human/sharding-file/auth/get-upload-files
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            fileKey: '$md_5{exam/试题视频.mp4, path_name(), file_size()}'
          }
    sql_statement:
    extract:
        mp4fileKey: $.fileKey
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-上传判断题视频
    request:
        url: api/v1/human/sharding-file/auth/upload-parse-file
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            fileKey: '${mp4fileKey}',
            fileOrder: 1,
            flag: 2,
            fileName: '$file_name{exam/试题视频.mp4}',
            contentType: 'video/mp4',
            convert: 'true',
            notifyUrl: '${ent_url}/api/v1/human/file/cloud/upload-merge',
            companyId: '${organizationId}',
            fileChunks: 1,
            fileSize: 9707113,
            configId: 'undefined'
          }
        files:
          {
            file: 'exam/试题视频.mp4'
          }
    sql_statement:
    extract:
        videoId: $.[0].id
    validate:
        -   eq:  ['$.[0].contentType', 'video/mp4']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-视频转换
    request:
        url: api/v1/course-study/transform-queue
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            ids: '${videoId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].translateFlag', '3']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-新增判断题
    request:
        url: api/v1/exam/question/other
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        body:
            {
              value: [{'value':'1','name':'1','type':3}],
              content: "【判断题】试题信息$date_time{}<img id='preview-${videoId},$file_name{exam/试题视频.mp4},mp4' class='video-img' style='display:block;width:302px;height:170px;' data-type='mp4' data-name='$file_name{exam/试题视频.mp4}' data-id='${videoId}' src='${ent_url}/admin/images/preview-media.jpg' />",
              contentText: "【判断题】试题信息$date_time{}<img id='preview-${videoId},$file_name{exam/试题视频.mp4},mp4' class='video-img' style='display:block;width:302px;height:170px;' data-type='mp4' data-name='$file_name{exam/试题视频.mp4}' data-id='${videoId}' src='${ent_url}/admin/images/preview-media.jpg' />",
              'questionAttrs[0][value]': 1,
              'questionAttrs[0][name]': 1,
              'questionAttrs[0][type]': 3,
              score: 1000,
              type: 3,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '【判断题】试题解析',
              parsingText: '【判断题】试题解析',
              difficulty: 3,
              isTemp: 1,
              depotEdit: 0
            }
    extract:
        panduantiId: $.id
        panduantiName: $.content
        panduantiDifficulty: $.difficulty
    validate:
        -   eq:  ['$.type', '3']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-新增填空题
    request:
        url: api/v1/exam/question/other
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        body:
            {
              value: [{value: '【填空题】试题答案', name: '【填空题】试题答案', type: 4}],
              'questionAttrs[0][value]': '【填空题】试题答案',
              'questionAttrs[0][name]': '【填空题】试题答案',
              'questionAttrs[0][type]': 4,
              content: '【填空题】试题信息()$date_time{}',
              contentText: '【填空题】试题信息()$date_time{}',
              score: 1000,
              type: 4,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '【填空题】试题解析',
              parsingText: '【填空题】试题解析',
              difficulty: 3,
              isTemp: 1,
              depotEdit: 0
            }
    extract:
        tiankongtiId: $.id
        tiankongtiName: $.content
        tiankongtiDifficulty: $.difficulty
    validate:
        -   eq:  ['$.type', '4']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-新增问答题
    request:
        url: api/v1/exam/question/other
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        body:
            {
              value: [{'value': '【问答题】参考答案', 'name': '【问答题】参考答案', 'type': 5}],
              'questionAttrs[0][value]': '【问答题】参考答案',
              'questionAttrs[0][name]': '【问答题】参考答案',
              'questionAttrs[0][type]': 5,
              content: '【问答题】试题信息$date_time{}',
              contentText: '【问答题】试题信息$date_time{}',
              score: 1000,
              type: 5,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '【问答题】试题解析',
              parsingText: '【问答题】试题解析',
              difficulty: 3,
              isTemp: 1,
              depotEdit: 0
            }
    extract:
        wendatiId: $.id
        wendatiName: $.content
        wendatiDifficulty: $.difficulty
    validate:
        -   eq:  ['$.type', '5']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-新增排序题
    request:
        url: api/v1/exam/question/other
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        body:
            {
              value: [{'value':'A','valueText':'A','name':0,'type':8},{'value':'B','valueText':'B','name':1,'type':8},{'value':'C','valueText':'C','name':2,'type':8},{'value':'D','valueText':'D','name':3,'type':8},{'value':'0|1|2|3|','name':0,'type':0}],
              'questionAttrs[0][value]': 'A',
              'questionAttrs[0][valueText]': 'A',
              'questionAttrs[0][name]': 0,
              'questionAttrs[0][type]': 8,
              'questionAttrs[1][value]': 'B',
              'questionAttrs[1][valueText]': 'B',
              'questionAttrs[1][name]': 1,
              'questionAttrs[1][type]': 8,
              'questionAttrs[2][value]': 'C',
              'questionAttrs[2][valueText]': 'C',
              'questionAttrs[2][name]': 2,
              'questionAttrs[2][type]': 8,
              'questionAttrs[3][value]': 'D',
              'questionAttrs[3][valueText]': 'D',
              'questionAttrs[3][name]': 3,
              'questionAttrs[3][type]': 8,
              'questionAttrs[4][value]': '0|1|2|3|',
              'questionAttrs[4][name]': 0,
              'questionAttrs[4][type]': 0,
              content: '【排序题】试题信息$date_time{}',
              contentText: '【排序题】试题信息$date_time{}',
              score: 1000,
              type: 8,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '【排序题】试题解析',
              parsingText: '【排序题】试题解析',
              difficulty: 3,
              isTemp: 1,
              depotEdit: 0
            }
    extract:
        paixutiId: $.id
        paixutiName: $.content
        paixutiDifficulty: $.difficulty
    validate:
        -   eq:  ['$.type', '8']

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-新增试题-新增阅读理解题
    request:
        url: api/v1/exam/question/other
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        body:
            {
              value: [{'questionAttrs':[{'value':'A','valueText':'A','name':0,'type':0},{'value':'B','valueText':'B','name':1,'type':1},{'value':'C','valueText':'C','name':2,'type':1},{'value':'D','valueText':'D','name':3,'type':1}],'content':'【阅读理解题-单选题】试题信息','contentText':'【阅读理解题-单选题】试题信息','difficulty':'3','score':'1000','id':'q-1','parsing':'【阅读理解题-单选题】试题解析','parsingText':'【阅读理解题-单选题】试题解析','type':'1','order':1},{'questionAttrs':[{'value':'a','valueText':'a','name':0,'type':0},{'value':'b','valueText':'b','name':1,'type':0},{'value':'c','valueText':'c','name':2,'type':2},{'value':'d','valueText':'d','name':3,'type':2}],'content':'【阅读理解题-多选题】试题信息','contentText':'【阅读理解题-多选题】试题信息','difficulty':'3','score':'1000','id':'q-2','parsing':'【阅读理解题-多选题】试题解析','parsingText':'【阅读理解题-多选题】试题解析','type':'2','order':2},{'questionAttrs':[{'value':'【阅读理解题-问答题】参考答案','name':'【阅读理解题-问答题】参考答案','type':5}],'content':'【阅读理解题-问答题】试题信息','contentText':'【阅读理解题-问答题】试题信息','score':'1000','parsing':'【阅读理解题-问答题】试题解析','parsingText':'【阅读理解题-问答题】试题解析','type':'5','id':'q-3','difficulty':'3','order':3}],
              'questionAttrs[0][questionAttrs][0][value]': 'A',
              'questionAttrs[0][questionAttrs][0][valueText]': 'A',
              'questionAttrs[0][questionAttrs][0][name]': 0,
              'questionAttrs[0][questionAttrs][0][type]': 0,
              'questionAttrs[0][questionAttrs][1][value]': 'B',
              'questionAttrs[0][questionAttrs][1][valueText]': 'B',
              'questionAttrs[0][questionAttrs][1][name]': 1,
              'questionAttrs[0][questionAttrs][1][type]': 1,
              'questionAttrs[0][questionAttrs][2][value]': 'C',
              'questionAttrs[0][questionAttrs][2][valueText]': 'C',
              'questionAttrs[0][questionAttrs][2][name]': 2,
              'questionAttrs[0][questionAttrs][2][type]': 1,
              'questionAttrs[0][questionAttrs][3][value]': 'D',
              'questionAttrs[0][questionAttrs][3][valueText]': 'D',
              'questionAttrs[0][questionAttrs][3][name]': 3,
              'questionAttrs[0][questionAttrs][3][type]': 1,
              'questionAttrs[0][content]': '【阅读理解题-单选题】试题信息',
              'questionAttrs[0][contentText]': '【阅读理解题-单选题】试题信息',
              'questionAttrs[0][difficulty]': 3,
              'questionAttrs[0][score]': 1000,
              'questionAttrs[0][id]': 'q-1',
              'questionAttrs[0][parsing]': '【阅读理解题-单选题】试题解析',
              'questionAttrs[0][parsingText]': '【阅读理解题-单选题】试题解析',
              'questionAttrs[0][type]': 1,
              'questionAttrs[0][order]': 1,
              'questionAttrs[1][questionAttrs][0][value]': 'A',
              'questionAttrs[1][questionAttrs][0][valueText]': 'A',
              'questionAttrs[1][questionAttrs][0][name]': 0,
              'questionAttrs[1][questionAttrs][0][type]': 0,
              'questionAttrs[1][questionAttrs][1][value]': 'B',
              'questionAttrs[1][questionAttrs][1][valueText]': 'B',
              'questionAttrs[1][questionAttrs][1][name]': 1,
              'questionAttrs[1][questionAttrs][1][type]': 0,
              'questionAttrs[1][questionAttrs][2][value]': 'C',
              'questionAttrs[1][questionAttrs][2][valueText]': 'C',
              'questionAttrs[1][questionAttrs][2][name]': 2,
              'questionAttrs[1][questionAttrs][2][type]': 2,
              'questionAttrs[1][questionAttrs][3][value]': 'D',
              'questionAttrs[1][questionAttrs][3][valueText]': 'D',
              'questionAttrs[1][questionAttrs][3][name]': 3,
              'questionAttrs[1][questionAttrs][3][type]': 2,
              'questionAttrs[1][content]': '【阅读理解题-多选题】试题信息',
              'questionAttrs[1][contentText]': '【阅读理解题-多选题】试题信息',
              'questionAttrs[1][difficulty]': 3,
              'questionAttrs[1][score]': 1000,
              'questionAttrs[1][id]': 'q-2',
              'questionAttrs[1][parsing]': '【阅读理解题-多选题】试题信息试题解析',
              'questionAttrs[1][parsingText]': '【阅读理解题-多选题】试题信息试题解析',
              'questionAttrs[1][type]': 2,
              'questionAttrs[1][order]': 2,
              'questionAttrs[2][questionAttrs][0][value]': '【阅读理解题-问答题】参考答案',
              'questionAttrs[2][questionAttrs][0][name]': '【阅读理解题-问答题】参考答案',
              'questionAttrs[2][questionAttrs][0][type]': 5,
              'questionAttrs[2][content]': '【阅读理解题-问答题】试题信息',
              'questionAttrs[2][contentText]': '【阅读理解题-问答题】试题信息',
              'questionAttrs[2][score]': 1000,
              'questionAttrs[2][parsing]': '【阅读理解题-问答题】试题解析',
              'questionAttrs[2][parsingText]': '【阅读理解题-问答题】试题解析',
              'questionAttrs[2][type]': 5,
              'questionAttrs[2][id]': 'q-3',
              'questionAttrs[2][difficulty]': 3,
              'questionAttrs[2][order]': 3,
              content: '【阅读理解题】试题信息$date_time{}',
              contentText: '【阅读理解题】试题信息$date_time{}',
              score: 3000,
              type: 6,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              difficulty: 3,
              isTemp: 1,
              depotEdit: 0
            }
    extract:
        yuedulijietiId: $.id
        yuedulijietiName: $.content
        yuedulijie_zitiId1: $.subs[0].id
        yuedulijie_zitiId2: $.subs[1].id
        yuedulijie_zitiId3: $.subs[2].id
        yuedulijietiDifficulty: $.difficulty
    validate:
        -   eq:  ['$.type', '6']

-   name: 【普通考试】——新增考试-添加试卷-查询音视频文件
    request:
        url: api/v1/human/file/find-by-ids
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            ids: '${audioId},${videoId},'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-添加试卷-试题组卷-保存试题组卷
    request:
        url: api/v1/exam/paper-class
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            questionNum: 7,
            totalScore: 9000,
            paperClassQuestions:
              [
                {
                  questionId: '${danxuantiId}',
                  score: 1000,
                  sequence: 0,
                  isFromSelected: 0,
                  sortType: 1
                },
                {
                  questionId: '${duoxuantiId}',
                  score: 1000,
                  sequence: 1,
                  isFromSelected: 0,
                  sortType: 2
                },
                {
                  questionId: '${panduantiId}',
                  score: 1000,
                  sequence: 2,
                  isFromSelected: 0,
                  sortType: 3
                },
                {
                  questionId: '${paixutiId}',
                  score: 1000,
                  sequence: 3,
                  isFromSelected: 0,
                  sortType: 4
                },
                {
                  questionId: '${tiankongtiId}',
                  score: 1000,
                  sequence: 4,
                  isFromSelected: 0,
                  sortType: 5
                },
                {
                  questionId: '${wendatiId}',
                  score: 1000,
                  sequence: 5,
                  isFromSelected: 0,
                  sortType: 6
                },
                {
                  questionId: '${yuedulijietiId}',
                  score: 3000,
                  sequence: 6,
                  isFromSelected: 0,
                  sortType: 7
                },
                {
                  questionId: '${yuedulijie_zitiId1}',
                  score: 1000,
                  sequence: 0,
                  parentId: '${yuedulijietiId}'
                },
                {
                  questionId: '${yuedulijie_zitiId2}',
                  score: 1000,
                  sequence: 1,
                  parentId: '${yuedulijietiId}'
                },
                {
                  questionId: '${yuedulijie_zitiId3}',
                  score: 1000,
                  sequence: 2,
                  parentId: '${yuedulijietiId}'
                }
              ],
            'questionDepot/${questionDepotId}/3/1/1': 10,
            'questionDepot/${questionDepotId}/3/1/2': 10,
            'questionDepot/${questionDepotId}/3/1/3': 10,
            'questionDepot/${questionDepotId}/3/1/8': 10,
            'questionDepot/${questionDepotId}/3/1/4': 10,
            'questionDepot/${questionDepotId}/3/1/5': 10,
            'questionDepot/${questionDepotId}/3/1/6': 30,
            type: 2,
            name: '【普通考试】$date_time{}'
          }
    sql_statement:
    extract:
        paperId: $.id
        examName: $.name
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——新增考试-预览试卷
    request:
        url: api/v1/exam/paper-class
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            paperId: '${paperId}',
            examName: '${examName}',
            businessType: 1
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——新增考试-预览试卷-查询音频文件
    request:
        url: api/v1/human/file/${audioId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.contentType', 'audio/mpeg']

-   name: 【普通考试】——新增考试-预览试卷-播放音频文件
    request:
        url: api/v1/course-study/file/safe/${audioId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.contentType', 'audio/mpeg']

-   name: 【普通考试】——新增考试-预览试卷-查询视频文件
    request:
        url: api/v1/human/file/${videoId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.contentType', 'video/mp4']

-   name: 【普通考试】——新增考试-预览试卷-播放视频文件
    request:
        url: api/v1/course-study/file/safe-new/${videoId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.contentType', 'video/mp4']

-   name: 【普通考试】——新增考试-添加试卷-查询试卷信息
    request:
        url: api/v1/exam/paper-class
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            paperId: '${paperId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——新增考试-添加试卷-选择用户-查询授权节点列表
    request:
        url: api/v1/system/grant/find-member-grant-item
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            uri: 'exam/exam'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].organizationName', '${organizationName}']

-   name: 【普通考试】——新增考试-添加试卷-选择用户-查询用户信息
    request:
        url: api/v1/human/member/members
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            organizationId: '${organizationId}',
            name: '${student_username}',
            exceptSelf: 'true',
            status: 3,
            page: 1,
            pageSize: 10
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].status', '1']

-   name: 【普通考试】——新增考试-添加试卷-选择用户-查询用户数量
    request:
        url: api/v1/human/member/members-count
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            organizationId: '${organizationId}',
            name: '${student_username}',
            exceptSelf: 'true',
            status: 3,
            page: 1,
            pageSize: 10
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['(.*)', '1']

-   name: 【普通考试】——新增考试-添加考生-查询是否分院管理员
    request:
        url: api/v1/system/home-admin/is-home-admin
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.isHomeAdmin', 'True']

-   name: 【普通考试】——新增考试-添加考生-同步分院-查询分院信息
    request:
        url: api/v1/system/home-admin/member-manage-branch
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
        homeConfigIds: $.items[0].id
    validate:
        -   eq:  ['$.recordCount', '1']

-   name: 【普通考试】——新增考试-添加考生-同步分院-添加分院
    request:
        url: api/v1/system/home-admin/check-manage-branch
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            homeConfigIds: '${homeConfigIds}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.ultraVires', 'false']

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-添加监考人员
    request:
        url: api/v1/exam/invigilator/batch-insert
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            invigilators:
              [
                {
                  memberId: '${studentId}',
                  examId: '${examId}'
                },
                {
                  memberId: '${adminId}',
                  examId: '${examId}'
                }],
            examName: '${examName}',
            businessType: 1
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].examId', '${examId}']

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-查询监考人员列表
    request:
        url: api/v1/exam/invigilator/page/config-list
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            examId: '${examId}',
            page: 1,
            pageSize: 10
          }
    sql_statement:
    extract:
      invigilatorId: $.items.[0].id
    validate:
        -   eq:  ['$.recordCount', '2']

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-查询监考人员最高监考范围
    request:
        url: api/v1/system/organization/company-orgs
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            uri: 'exam/exam',
            supportMore: 'true',
            status: 1,
            rootId: '${organizationId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].status', '1']

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-更改监考人员监考范围
    request:
        url: api/v1/exam/invigilator/update-grant
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            invigilatorId: '${invigilatorId}',
            invigilatorGrants:
              [
                {
                  memberId: '${adminId}',
                  organizationId: '${organizationId}',
                  type: '1',
                  invigilatorId: '${invigilatorId}'
                }
              ],
            businessType: 1
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].type', '1']

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-导入监考人员
    request:
        url: api/v1/human/file/upload-excel-file
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
        files:
          {
            file: 'exam/${ent_name}_监考人员导入模板.xlsx'
          }
    sql_statement:
    extract:
        fileId: $.[0].id
    validate:
        -   eq:  ['$.[0].filename', 'xlsx']

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-查询导入结果
    request:
        url: api/v1/exam/invigilator/import-exam
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            fileId: '${fileId}',
            examId: '${examId}'
          }
    sql_statement:
    extract:
        errorFileId: $.errorFileId
    validate:
        -   eq:  ['$.failCount', '1']
        -   eq:  ['$.successCount', '1']
        -   eq:  ['$.updateCount', '1']

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-下载错误的导入数据
    request:
        url: api/v1/exam/file/download/invigilator
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            id: '${errorFileId}',
            access_token: '${admin_token}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——新增考试-考试配置-监考人员配置-删除监考人员
    request:
        url: api/v1/exam/invigilator/${invigilatorId}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            id: '${invigilatorId}',
            memberName: '${admin_username}',
            businessType: 1
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.id', '${invigilatorId}']

-   name: 【普通考试】——新增考试-考试配置-证书配置规则-查询考试证书类型
    request:
        url: api/v1/system/certificate/type-org
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            businessType: 4,
            organizationId: '${organizationId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.type', '4']

-   name: 【普通考试】——新增考试-考试配置-证书配置规则-查询企业考试证书
    request:
        url: api/v1/system/certificate/business
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            businessType: 4,
            organizationId: '${organizationId}'
          }
    sql_statement:
    extract:
        certificateId: $.[0].id
    validate:
        -   eq:  ['$.[0].type', '4']

-   name: 【普通考试】——新增考试-保存考试
    request:
        url: api/v1/exam/exam
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            publish: 0,
            isAllowSwitch: 1,
            virtualExamId: '${examId}',
            name: '${examName}',
            allowExamTimes: 1,
            isRepeat: 1,
            startTime: '$diy_time{*, *, *, *, *}',
            endTime: '$diy_time{*, *, +2, *, *}',
            duration: 60,
            client: 2,
            credit: 1000,
            isCreditNeedPass: 1,
            type: 1,
            topicIds: '${topicId1},${topicId2},${topicId3}，${topicId4}，${topicId5}',
            examNotes: '请考生仔细阅读，并参照执行，如遇特殊情况，请联系监考老师或拨打客服电话。',
            organizationId-text: '${organizationName}',
            organizationId: '${organizationId}',
            publisherId: '${adminId}',
            publishOrganizationId: '${organizationId}',
            coverId: '${coverId}',
            coverIdPath: '${coverIdPath}',
            isCredit: 1,
            supportApp: '1,2',
            clientType: 0,
            totalScore: 9000,
            evalutionRule: '{"passLess": 54,"passGreater": 72,"goodLess": 72,"goodGreater": 81,"excellentLess": 81,"noPassGreater": 54}',
            paperClassId: '${paperId}',
            paperSortRule: 1,
            rule: 54,
            paperShowRule: 2,
            anonymityMark: 0,
            markConfig: {markPapers: [{id: "${paperId}", name: "${examName}","markMembers": [{id: "${studentId}",name: "${studentName}"}]}]},
            audiences: '${studentName}',
            audienceItemIds: '${studentId}',
            resourceIds: 'validatePass',
            addItems: [{"joinId":"${studentId}","joinType":5,"joinName":"${studentName}"}],
            emptyFlag: 0,
            branchid: '${homeConfigIds}',
            resourceType: 4,
            branchAdmin: 'true',
            needApplicant: 1,
            needFillOutInfo: 0,
            applicantStartTime: '$time_stamp{$diy_time{*, *, -1, *, *, *}}',
            applicantEndTime: '$time_stamp{$diy_time{*, *, +1, *, *, *}}',
            needAudit: 0,
            preApproval: 0,
            applicantNeedAudit: 0,
            faceMode: 1,
            faceFailedRule: 0,
            isShowScore: 'false',
            allowSwitchTimes: 3,
            faceLimitTimes: 3,
            accessSecret: 'A12345',
            isSetAccessSecret: 1,
            admissionTicket: 1,
            hasCert: 1,
            issueFlag: 1,
            certificateId: '${certificateId}',
            issueTime: '$time_stamp{$date_time{}}',
            paperViewRule: 1,
            showAnswerRule: 3,
            certificateType: 0,
            paperClassScores: [{"questionDepotId": "${questionDepotId}","difficulty": "${danxuantiDifficulty}","totalScore": "1000","questionCount": "1","type": "1"},{"questionDepotId": "${questionDepotId}","difficulty": "${panduantiDifficulty}","totalScore": "1000","questionCount": "1","type": "3"},{"questionDepotId": "${questionDepotId}","difficulty": "${duoxuantiDifficulty}","totalScore": "1000","questionCount": "1","type": "2"},{"questionDepotId": "${questionDepotId}","difficulty": "${paixutiDifficulty}","totalScore": "1000","questionCount": "1","type": "8"},{"questionDepotId": "${questionDepotId}","difficulty": "${tiankongtiDifficulty}","totalScore": "1000","questionCount": "1","type": "4"},{"questionDepotId": "${questionDepotId}","difficulty": "${wendatiDifficulty}","totalScore": "1000","questionCount": "1","type": "5"},{"questionDepotId": "${questionDepotId}","difficulty": "${yuedulijietiDifficulty}","totalScore": "3000","questionCount": "1","type": '6'}],
            audienceItems: [{"joinId":"${studentId}","joinType":5,"joinName":"${studentName}"}],
            topic: [{topicId: '${topicId1}'},{topicId: '${topicId2}'},{topicId: '${topicId3}'},{topicId: '${topicId4}'},{topicId: '${topicId5}'}],
            isSetPersonalCode: 0
          }
    sql_statement:
    extract:
      examId: $.id
    validate:
        -   eq:  ['$.supportApp', '1,2']

-   name: 【普通考试】——新增考试-发布分支
    request:
        url: api/v1/exam/resource-pool/publish-to-branch
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            businessId: '${examId}',
            type: 4,
            homeConfigIds: '${homeConfigIds}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', 'ok']

-   name: 【普通考试】——修改考试-查询考试信息
    request:
        url: api/v1/exam/exam/${examId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——修改考试-查询资源分支
    request:
        url: api/v1/exam/resource-pool/find-resource-branch
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            id: '${homeConfigIds}',
            type: 4
          }
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——修改考试-查询设备类型
    request:
        url: api/v1/exam/equipment-type/all
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——修改考试-查询封面信息
    request:
        url: api/v1/knowledge-operation/cover-pattern/find-by-key
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            coverKey: 'exam'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.coverKey', 'exam']

-   name: 【普通考试】——修改考试-查询关联标签
    request:
        url: api/v1/system/topic/ids
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            ids: '${topicId1},${topicId2},${topicId3},${topicId4},${topicId5}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——考试配置-考试发布-试卷题目统计
    request:
        url: api/v1/exam/exam/paper-question-statistics/${paperId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.sum', '7']

-   name: 【普通考试】——考试配置-考试发布-查询监考人员数量
    request:
        url: api/v1/exam/exam/has-invigilator
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            examId: '${examId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——考试配置-考试发布-学员消息通知
    request:
        url: api/v1/system/operation/message-template/content
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            templateCode: 'exam_publish',
            organizationId: '${organizationId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.name', '考试发布']

-   name: 【普通考试】——考试配置-考试发布-评卷老师消息通知
    request:
        url: api/v1/system/operation/message-template/content
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            templateCode: 'exam_mark_plan',
            organizationId: '${organizationId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.name', '考试阅卷安排']

-   name: 【普通考试】——考试配置-考试发布-监考老师消息通知
    request:
        url: api/v1/system/operation/message-template/content
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            templateCode: 'invigilator_notice',
            organizationId: '${organizationId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.name', '监考通知']

-   name: 【普通考试】——考试配置-考试发布-查询规则配置
    request:
        url: api/v1/system/rule-config/key
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            key: 'WEBSITE_TITLE'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——考试配置-考试发布-查询试卷信息
    request:
        url: api/v1/exam/paper-class
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            paperId: '${paperId}',
            examName: '${examName}',
            businessType: 1
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.status', '1']

-   name: 【普通考试】——考试配置-考试发布-查询音视频文件
    request:
        url: api/v1/human/file/find-by-ids
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/exam
        body:
          {
            ids: '${audioId},${videoId}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【普通考试】——考试配置-发布考试
    request:
        url: api/v1/exam/exam/${examId}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/exam
        body:
          {
            publish: 1,
            isAllowSwitch: 1,
            accessSecret: 'A12345',
            admissionTicket: 1,
            allowExamTimes: 1,
            allowSwitchTimes: 3,
            anonymityMark: 0,
            applicantEndTime: '$time_stamp{$diy_time{*, *, +1, *, *, *}}',
            applicantNeedAudit: 0,
            applicantStartTime: '$time_stamp{$diy_time{*, *, -1, *, *, *}}',
            belongAuditTime: 'false',
            certificateId: '${certificateId}',
            certificateType: 0,
            clientType: 0,
            coverId: '${coverId}',
            coverIdPath: '${coverIdPath}',
            credit: 1000,
            endTime: '$diy_time{*, *, +2, *, *}',
            duration: 60,
            evalutionRule: '{"passLess": 54,"passGreater": 72,"goodLess": 72,"goodGreater": 81,"excellentLess": 81,"noPassGreater": 54}',
            examNotes: '请考生仔细阅读，并参照执行，如遇特殊情况，请联系监考老师或拨打客服电话。',
            faceFailedRule: 0,
            faceLimitTimes: 3,
            faceMode: 1,
            hasCert: 1,
            id: '${examId}',
            isCreditNeedPass: 1,
            isMakeUp: 0,
            isPermitViewCode: 1,
            isRepeat: 1,
            isSetAccessSecret: 1,
            isSetPassScore: 1,
            isSetPersonalCode: 0,
            issueFlag: 0,
            joinNumber: 0,
            makeUpCount: 0,
            name: '${examName}',
            needApplicant: 1,
            needFillOutInfo: 0,
            paperClassId: '${paperId}',
            paperShowRule: 2,
            paperSortRule: 1,
            paperViewRule: 1,
            passScore: 54,
            sendToCenter: 1,
            showAnswerRule: 3,
            sourceType: 1,
            startTime: '$diy_time{*, *, *, *, *}',
            status: 1,
            supportApp: '1,2',
            type: 1,
            isCredit: 1,
            client: 1,
            topicIds: '${topicId1},${topicId2},${topicId3}，${topicId4}，${topicId5}',
            organizationId-text: '${organizationName}',
            organizationId: '${organizationId}',
            publisherId: '${adminId}',
            publishOrganizationId: '${organizationId}',
            isShowScore: 'false',
            markConfig: {markPapers: [{id: "${paperId}", name: "${examName}","markMembers": [{id: "${studentId}",name: "${studentName}"}]}]},
            audienceItems: [{"joinId": "${studentId}","joinType": 5,"joinName": "${studentName}"}],
            addItems: [{"joinId":"${studentId}","joinType":5,"joinName":"${studentName}"}],
            topic: [{topicId: '${topicId1}'},{topicId: '${topicId2}'},{topicId: '${topicId3}'},{topicId: '${topicId4}'},{topicId: '${topicId5}'}],
            noticeUser: 0,
            noticeTeacher: 0,
            noticeInvigilator: 0,
            website: '${organizationName}'
          }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.supportApp', '1,2']
