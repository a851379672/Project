allure:
    {
      'allure_descrption': '',
      'allure_suite': '管理端',
      'allure_sub_suite': '考试模块',
      'allure_feature': '管理端',
      'allure_story': '考试模块'
    }
test:
-   name: 【普通试题】——获取目录编码
    request:
        url: api/v1/system/module-code
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
            {
              prefix: 'st_'
            }
    extract:
    validate:
       -   eq:  [Status Code, 200]

-   name: 【普通试题】——新建试题目录
    request:
        url: api/v1/exam/question-depot
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        data:
            {
              name: '试题目录1',
              organizationId: '${organizationId}',
              code: '${ent_name}_1',
              sequence: 0,
              state: 1,
              authToLower: 0,
              depotAuthToLower: 1,
              type: 1
            }
    extract:
        questionDepotId: $.id
        questionDepotName: $.name
    validate:
       -   eq:  ['$.organizationId', '${organizationId}']

-   name: 【普通试题】——查询试题目录
    request:
        url: api/v1/exam/question-depot
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
            {
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              'organization[state]': 1,
              depotShare: 1,
              type: 1
            }
    extract:
    validate:
       -   eq:  ['$.[0].name', '试题目录1']

-   name: 【普通试题】——查询目录编码
    request:
        url: api/v1/exam/question-depot/${questionDepotId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
    extract:
        code: $.code
    validate:
       -   eq:  ['$.state', '1']

-   name: 【普通试题】——新增单选题
    request:
        url: api/v1/exam/question
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
            {
              value: [{'value':'A','valueText':'A','name':0,'type':0},{'value':'B','valueText':'B', 'name':1,
                       'type':1},{'value':'C','valueText':'C','name':2,'type':1},{'value':'D','valueText':'D',
                       'name':3,'type':1}],
              'questionAttrs[0][value]': 'A',
              'questionAttrs[0][valueText]': 'A',
              'questionAttrs[0][name]': 0,
              'questionAttrs[0][type]': 0,
              'questionAttrs[1][value]': 'B',
              'questionAttrs[1][valueText]': 'B',
              'questionAttrs[1][name]': 1,
              'questionAttrs[1][type]': 1,
              'questionAttrs[2][value]': 'C',
              'questionAttrs[2][valueText]': 'C',
              'questionAttrs[2][name]': 2,
              'questionAttrs[2][type]': 1,
              'questionAttrs[3][value]': 'D',
              'questionAttrs[3][valueText]': 'D',
              'questionAttrs[3][name]': 3,
              'questionAttrs[3][type]': 1,
              content: '${questionDepotName}-单选题1',
              contentText: '${questionDepotName}-单选题1',
              score: 1000,
              type: 1,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '试题解析',
              parsingText: '试题解析',
              difficulty: 3,
              depotEdit: 0
            }
    extract:
      danxuanid: $.id
      danxuanname: $.content
    validate:
      -   eq:  ['$.type', '1']

-   name: 【普通试题】——查询组织试题
    request:
        url: api/v1/exam/question
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
            {
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              'organization[state]': 1,
              forbidden: 0,
              depttype: 1,
              url: 'exam/question-depot',
              page: 1,
              pageSize: 10
            }
    extract:
      originalQuestionId: $.items.[0].originalQuestionId
    validate:
      -   eq:  ['$.items.[0].organization.id', '${organizationId}']

-   name: 【普通试题】——修改单选题
    request:
        url: api/v1/exam/question/${danxuanid}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            value: [ { 'value': 'A','valueText': 'A','name': 0,'type': 1 },{ 'value': 'B','valueText': 'B', 'name': 1,
                      'type': 0 },{ 'value': 'C','valueText': 'C','name': 2,'type': 1 },{ 'value': 'D','valueText': 'D',
                                                                                          'name': 3,'type': 1 } ],
            'questionAttrs[0][value]': 'A',
            'questionAttrs[0][valueText]': 'A',
            'questionAttrs[0][name]': 0,
            'questionAttrs[0][type]': 1,
            'questionAttrs[1][value]': 'B',
            'questionAttrs[1][valueText]': 'B',
            'questionAttrs[1][name]': 1,
            'questionAttrs[1][type]': 0,
            'questionAttrs[2][value]': 'C',
            'questionAttrs[2][valueText]': 'C',
            'questionAttrs[2][name]': 2,
            'questionAttrs[2][type]': 1,
            'questionAttrs[3][value]': 'D',
            'questionAttrs[3][valueText]': 'D',
            'questionAttrs[3][name]': 3,
            'questionAttrs[3][type]': 1,
            content: '${danxuanname}',
            contentText: '${danxuanname}',
            score: 1000,
            id: '${originalQuestionId}',
            type: 1,
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            parsing: '试题解析',
            parsingText: '试题解析',
            affectedType: 1,
            difficulty: 3,
            organizationId: '${organizationId}',
            depotEdit: 1
          }
    extract:
    validate:
       -   eq:  ['$.status', '0']

-   name: 【普通试题】——新增多选题
    request:
        url: api/v1/exam/question
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
            {
              value: [{'value':'A','valueText':'A','name':0,'type':0},{'value':'B','valueText':'B', 'name':1,
                       'type':0},{'value':'C','valueText':'C','name':2,'type':0},{'value':'D','valueText':'D',
                       'name':3,'type':0}],
              'questionAttrs[0][value]': 'A',
              'questionAttrs[0][valueText]': 'A',
              'questionAttrs[0][name]': 0,
              'questionAttrs[0][type]': 0,
              'questionAttrs[1][value]': 'B',
              'questionAttrs[1][valueText]': 'B',
              'questionAttrs[1][name]': 1,
              'questionAttrs[1][type]': 0,
              'questionAttrs[2][value]': 'C',
              'questionAttrs[2][valueText]': 'C',
              'questionAttrs[2][name]': 2,
              'questionAttrs[2][type]': 0,
              'questionAttrs[3][value]': 'D',
              'questionAttrs[3][valueText]': 'D',
              'questionAttrs[3][name]': 3,
              'questionAttrs[3][type]': 0,
              content: '${questionDepotName}-多选题1',
              contentText: '${questionDepotName}-多选题1',
              score: 1000,
              type: 2,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '试题解析',
              parsingText: '试题解析',
              difficulty: 3,
              depotEdit: 0
            }
    extract:
      duoxuanid: $.id
      duoxuanname: $.content
    validate:
      -   eq:  ['$.type', '2']

-   name: 【普通试题】——修改多选题
    request:
        url: api/v1/exam/question/${duoxuanid}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            value: [ { 'value': 'A','valueText': 'A','name': 0,'type': 0 },{ 'value': 'B','valueText': 'B', 'name': 1,
                      'type': 0 },{ 'value': 'C','valueText': 'C','name': 2,'type': 2 },{ 'value': 'D','valueText': 'D',
                                                                                          'name': 3,'type': 2 } ],
            'questionAttrs[0][value]': 'A',
            'questionAttrs[0][valueText]': 'A',
            'questionAttrs[0][name]': 0,
            'questionAttrs[0][type]': 0,
            'questionAttrs[1][value]': 'B',
            'questionAttrs[1][valueText]': 'B',
            'questionAttrs[1][name]': 1,
            'questionAttrs[1][type]': 0,
            'questionAttrs[2][value]': 'C',
            'questionAttrs[2][valueText]': 'C',
            'questionAttrs[2][name]': 2,
            'questionAttrs[2][type]': 2,
            'questionAttrs[3][value]': 'D',
            'questionAttrs[3][valueText]': 'D',
            'questionAttrs[3][name]': 3,
            'questionAttrs[3][type]': 2,
            content: '${duoxuanname}',
            contentText: '${duoxuanname}',
            score: 1000,
            id: '${originalQuestionId}',
            type: 2,
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            parsing: '试题解析',
            parsingText: '试题解析',
            affectedType: 1,
            difficulty: 3,
            organizationId: '${organizationId}',
            depotEdit: 1
          }
    extract:
    validate:
       -   eq:  ['$.status', '0']

-   name: 【普通试题】——新增判断题
    request:
        url: api/v1/exam/question
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
            {
              value: [{"value":"1","name":"1","type":3}],
              content: '${questionDepotName}-判断题1',
              contentText: '${questionDepotName}-判断题1',
              score: 1000,
              type: 3,
              'questionAttrs[0][value]': 1,
              'questionAttrs[0][name]': 1,
              'questionAttrs[0][type]': 3,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '试题解析',
              parsingText: '试题解析',
              difficulty: 3,
              depotEdit: 0
            }
    extract:
      panduanid: $.id
      panduanname: $.content
    validate:
      -   eq:  ['$.type', '3']

-   name: 【普通试题】——修改判断题
    request:
        url: api/v1/exam/question/${panduanid}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            value: [{"value":"0","name":"0","type":3}],
            content: '${panduanname}',
            contentText: '${panduanname}',
            'questionAttrs[0][value]': 0,
            'questionAttrs[0][name]': 0,
            'questionAttrs[0][type]': 3,
            score: 1000,
            id: '${originalQuestionId}',
            type: 3,
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            parsing: '试题解析',
            parsingText: '试题解析',
            affectedType: 1,
            difficulty: 3,
            organizationId: '${organizationId}',
            depotEdit: 1
          }
    extract:
    validate:
       -   eq:  ['$.status', '0']

-   name: 【普通试题】——新增填空题
    request:
        url: api/v1/exam/question
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
            {
              value: [{"value":"1|2","name":"1|2","type":4}],
              'questionAttrs[0][value]': '1|2',
              'questionAttrs[0][name]': '1|2',
              'questionAttrs[0][type]': 4,
              content: '<p>
                  题目1：()
              </p>
              <p>
                  题目2：()
              </p>',
              contentText: '题目1：()


              题目2：()',
              score: 1000,
              type: 4,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '试题解析',
              parsingText: '试题解析',
              difficulty: 3,
              depotEdit: 0
            }
    extract:
      tiankongid: $.id
      tiankongname: $.content
    validate:
      -   eq:  ['$.type', '4']

-   name: 【普通试题】——修改填空题
    request:
        url: api/v1/exam/question/${tiankongid}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            value: [ { "value": "1|2","name": "1|2","type": 4 } ],
            content: '${tiankongname}',
            contentText: '${tiankongname}',
            score: 1000,
            id: '${tiankongid}',
            type: 4,
            'questionAttrs[0][value]': '1|2',
            'questionAttrs[0][name]': '1|2',
            'questionAttrs[0][type]': 4,
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            parsing: '试题解析',
            parsingText: '试题解析',
            affectedType: 1,
            difficulty: 3,
            organizationId: '${organizationId}',
            depotEdit: 0
          }
    extract:
      tiankongid: $.id
    validate:
       -   eq:  ['$.status', '0']

-   name: 【普通试题】——新增问答题
    request:
        url: api/v1/exam/question
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
            {
              value: [{"value":"${questionDepotName}-答案1","name":"${questionDepotName}-答案1","type":5}],
              content: '${questionDepotName}-题目1',
              contentText: '${questionDepotName}-题目1',
              score: 1000,
              type: 5,
              'questionAttrs[0][value]': '${questionDepotName}-答案1',
              'questionAttrs[0][name]': '${questionDepotName}-答案1',
              'questionAttrs[0][type]': 5,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '试题解析',
              parsingText: '试题解析',
              difficulty: 3,
              depotEdit: 0
            }
    extract:
      wendaid: $.id
      wendaname: $.content
    validate:
      -   eq:  ['$.type', '5']

-   name: 【普通试题】——修改问答题
    request:
        url: api/v1/exam/question/${wendaid}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            value: [{"value":"${questionDepotName}-答案1.","name":"${questionDepotName}-答案1.","type":5}],
            content: '${wendaname}.',
            contentText: '${wendaname}.',
            score: 1000,
            id: '${wendaid}',
            type: 5,
            'questionAttrs[0][value]': '${questionDepotName}-答案1',
            'questionAttrs[0][name]': '${questionDepotName}-答案1',
            'questionAttrs[0][type]': 5,
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            parsing: '试题解析',
            parsingText: '试题解析',
            affectedType: 1,
            difficulty: 3,
            organizationId: '${organizationId}',
            depotEdit: 1
          }
    extract:
    validate:
       -   eq:  ['$.status', '0']

-   name: 【普通试题】——新增阅读理解
    request:
        url: api/v1/exam/question
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
            {
              value: [{"questionAttrs":[{"value":"A","valueText":"A","name":0,"type":0},{"value":"B","valueText":"B","name":1,"type":1},{"value":"C","valueText":"C","name":2,"type":1},{"value":"D","valueText":"D","name":3,"type":1}],"content":"单选题1","contentText":"单选题1","difficulty":"3","score":"1000","id":"q-1","parsing":"试题解析1","parsingText":"试题解析1","type":"1","order":1},{"questionAttrs":[{"value":"A","valueText":"A","name":0,"type":0},{"value":"B","valueText":"B","name":1,"type":0},{"value":"C","valueText":"C","name":2,"type":2},{"value":"D","valueText":"D","name":3,"type":2}],"content":"多选题2","contentText":"多选题2","difficulty":"3","score":"1000","id":"q-2","parsing":"试题解析2","parsingText":"试题解析2","type":"2","order":2},{"questionAttrs":[{"value":"参考答案","name":"参考答案","type":5}],"content":"问答题3","contentText":"问答题3","score":"1000","parsing":"试题解析3","parsingText":"试题解析3","type":"5","id":"q-3","difficulty":"3","order":3}],
              'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ value ]': 'A',
              'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ valueText ]': 'A',
              'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ name ]': 0,
              'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ type ]': 0,
              'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ value ]': 'B',
              'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ valueText ]': 'B',
              'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ name ]': 1,
              'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ type ]': 1,
              'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ value ]': 'C',
              'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ valueText ]': 'C',
              'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ name ]': 2,
              'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ type ]': 1,
              'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ value ]': 'D',
              'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ valueText ]': 'D',
              'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ name ]': 3,
              'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ type ]': 1,
              'questionAttrs[ 0 ][ content ]': '单选题1',
              'questionAttrs[ 0 ][ contentText ]': '单选题1',
              'questionAttrs[ 0 ][ difficulty ]': 3,
              'questionAttrs[ 0 ][ score ]': 1000,
              'questionAttrs[ 0 ][ id ]': 'q-1',
              'questionAttrs[ 0 ][ parsing ]': '试题解析1',
              'questionAttrs[ 0 ][ parsingText ]': '试题解析1',
              'questionAttrs[ 0 ][ type ]': 1,
              'questionAttrs[ 0 ][ order ]': 1,
              'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ value ]': 'A',
              'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ valueText ]': 'A',
              'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ name ]': 0,
              'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ type ]': 0,
              'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ value ]': 'B',
              'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ valueText ]': 'B',
              'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ name ]': 1,
              'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ type ]': 0,
              'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ value ]': 'C',
              'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ valueText ]': 'C',
              'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ name ]': 2,
              'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ type ]': 2,
              'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ value ]': 'D',
              'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ valueText ]': 'D',
              'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ name ]': 3,
              'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ type ]': 2,
              'questionAttrs[ 1 ][ content ]': '多选题2',
              'questionAttrs[ 1 ][ contentText ]': '多选题2',
              'questionAttrs[ 1 ][ difficulty ]': 3,
              'questionAttrs[ 1 ][ score ]': 1000,
              'questionAttrs[ 1 ][ id ]': 'q-2',
              'questionAttrs[ 1 ][ parsing ]': '试题解析2',
              'questionAttrs[ 1 ][ parsingText ]': '试题解析2',
              'questionAttrs[ 1 ][ type ]': 2,
              'questionAttrs[ 1 ][ order ]': 2,
              'questionAttrs[ 2 ][ questionAttrs ][ 0 ][ value ]': '参考答案',
              'questionAttrs[ 2 ][ questionAttrs ][ 0 ][ name ]': '参考答案',
              'questionAttrs[ 2 ][ questionAttrs ][ 0 ][ type ]': 5,
              'questionAttrs[ 2 ][ content ]': '问答题3',
              'questionAttrs[ 2 ][ contentText ]': '问答题3',
              'questionAttrs[ 2 ][ score ]': 1000,
              'questionAttrs[ 2 ][ parsing ]': '试题解析3',
              'questionAttrs[ 2 ][ parsingText ]': '试题解析3',
              'questionAttrs[ 2 ][ type ]': 5,
              'questionAttrs[ 2 ][ id ]': 'q-3',
              'questionAttrs[ 2 ][ difficulty ]': 3,
              'questionAttrs[ 2 ][ order ]': 3,
              content: '${questionDepotName}-阅读裂解题1',
              contentText: '${questionDepotName}-阅读裂解题1',
              score: 3000,
              type: 6,
              questionDepotId: '${questionDepotId}',
              'questionDepot[ id ]': '${questionDepotId}',
              'questionDepot[ name ]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[ id ]': '${organizationId}',
              'organization[ name ]': '${organizationName}',
              difficulty: 3,
              depotEdit: 0
            }
    extract:
      yuedulijieid: $.id
      yuedulijiename: $.content
      yuedulijie_danxuanid: $.subs[0].id
      yuedulijie_danxuanid_1: $.subs[0].questionAttrs[0].id
      yuedulijie_danxuanid_2: $.subs[0].questionAttrs[1].id
      yuedulijie_danxuanid_3: $.subs[0].questionAttrs[2].id
      yuedulijie_danxuanid_4: $.subs[0].questionAttrs[3].id
      yuedulijie_duoxuanid: $.subs[1].id
      yuedulijie_duoxuanid_1: $.subs[1].questionAttrs[0].id
      yuedulijie_duoxuanid_2: $.subs[1].questionAttrs[1].id
      yuedulijie_duoxuanid_3: $.subs[1].questionAttrs[2].id
      yuedulijie_duoxuanid_4: $.subs[1].questionAttrs[3].id
      yuedulijie_wendaid: $.subs[2].id
      yuedulijie_wendaid_1: $.subs[2].questionAttrs[0].id
    validate:
      -   eq:  ['$.type', '6']

-   name: 【普通试题】——修改阅读理解题
    request:
        url: api/v1/exam/question/${yuedulijieid}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            value: [{"content":"单选题1","difficulty":3,"id":"${yuedulijie_danxuanid}","order":1,"parsing":"试题解析1","parsingText":"试题解析1","questionAttrs":[{"id":"${yuedulijie_danxuanid_1}","name":"0","type":"0","value":"A"},{"id":"${yuedulijie_danxuanid_2}","name":"1","type":"1","value":"B"},{"id":"${yuedulijie_danxuanid_3}","name":"2","type":"1","value":"C"},{"id":"${yuedulijie_danxuanid_4}","name":"3","type":"1","value":"D"}],"score":"1000","type":1},{"content":"多选题2","difficulty":3,"id":"${yuedulijie_duoxuanid}","order":2,"parsing":"试题解析2","parsingText":"试题解析2","questionAttrs":[{"id":"${yuedulijie_duoxuanid_1}","name":"0","type":"0","value":"A"},{"id":"${yuedulijie_duoxuanid_2}","name":"1","type":"0","value":"B"},{"id":"${yuedulijie_duoxuanid_3}","name":"2","type":"2","value":"C"},{"id":"${yuedulijie_duoxuanid_4}","name":"3","type":"2","value":"D"}],"score":"1000","type":2},{"content":"问答题3","difficulty":3,"id":"${yuedulijie_wendaid}","order":3,"parsing":"试题解析3","parsingText":"试题解析3","questionAttrs":[{"id":"${yuedulijie_wendaid_1}","name":"参考答案","type":"5","value":"参考答案"}],"score":"1000","type":5}],
            'questionAttrs[ 0 ][ content ]': '单选题1',
            'questionAttrs[ 0 ][ difficulty ]': 3,
            'questionAttrs[ 0 ][ score ]': 1000,
            'questionAttrs[ 0 ][ id ]': '${yuedulijie_danxuanid}',
            'questionAttrs[ 0 ][ parsing ]': '试题解析1',
            'questionAttrs[ 0 ][ parsingText ]': '试题解析1',
            'questionAttrs[ 0 ][ type ]': 1,
            'questionAttrs[ 0 ][ order ]': 1,
            'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ value ]': 'A',
            'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ id ]': '${yuedulijie_danxuanid_1}',
            'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ name ]': 0,
            'questionAttrs[ 0 ][ questionAttrs ][ 0 ][ type ]': 0,
            'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ value ]': 'B',
            'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ id ]': '${yuedulijie_danxuanid_2}',
            'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ name ]': 1,
            'questionAttrs[ 0 ][ questionAttrs ][ 1 ][ type ]': 1,
            'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ value ]': 'C',
            'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ id ]': '${yuedulijie_danxuanid_3}',
            'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ name ]': 2,
            'questionAttrs[ 0 ][ questionAttrs ][ 2 ][ type ]': 1,
            'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ value ]': 'D',
            'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ id ]': '${yuedulijie_danxuanid_4}',
            'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ name ]': 3,
            'questionAttrs[ 0 ][ questionAttrs ][ 3 ][ type ]': 1,
            'questionAttrs[ 1 ][ content ]': '多选题2',
            'questionAttrs[ 1 ][ id ]': '${yuedulijie_duoxuanid}',
            'questionAttrs[ 1 ][ difficulty ]': 3,
            'questionAttrs[ 1 ][ score ]': 1000,
            'questionAttrs[ 1 ][ parsing ]': '试题解析2',
            'questionAttrs[ 1 ][ parsingText ]': '试题解析2',
            'questionAttrs[ 1 ][ type ]': 2,
            'questionAttrs[ 1 ][ order ]': 2,
            'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ value ]': 'A',
            'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ id ]': '${yuedulijie_duoxuanid_1}',
            'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ name ]': 0,
            'questionAttrs[ 1 ][ questionAttrs ][ 0 ][ type ]': 0,
            'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ value ]': 'B',
            'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ id ]': '${yuedulijie_duoxuanid_2}',
            'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ name ]': 1,
            'questionAttrs[ 1 ][ questionAttrs ][ 1 ][ type ]': 0,
            'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ value ]': 'C',
            'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ id ]': '${yuedulijie_duoxuanid_3}',
            'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ name ]': 2,
            'questionAttrs[ 1 ][ questionAttrs ][ 2 ][ type ]': 2,
            'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ value ]': 'D',
            'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ id ]': '${yuedulijie_duoxuanid_4}',
            'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ name ]': 3,
            'questionAttrs[ 1 ][ questionAttrs ][ 3 ][ type ]': 2,
            'questionAttrs[ 2 ][ content ]': '问答题3',
            'questionAttrs[ 2 ][ id ]': '${yuedulijie_wendaid}',
            'questionAttrs[ 2 ][ score ]': 1000,
            'questionAttrs[ 2 ][ parsing ]': '试题解析3',
            'questionAttrs[ 2 ][ parsingText ]': '试题解析3',
            'questionAttrs[ 2 ][ type ]': 5,
            'questionAttrs[ 2 ][ difficulty ]': 3,
            'questionAttrs[ 2 ][ order ]': 3,
            'questionAttrs[ 2 ][ questionAttrs ][ 0 ][ id ]': '${yuedulijie_wendaid_1}',
            'questionAttrs[ 2 ][ questionAttrs ][ 0 ][ name ]': '参考答案',
            'questionAttrs[ 2 ][ questionAttrs ][ 0 ][ type ]': 5,
            'questionAttrs[ 2 ][ questionAttrs ][ 0 ][ value ]': '参考答案',
            content: '${yuedulijiename}',
            contentText: '${yuedulijiename}',
            score: 3000,
            id: '${yuedulijieid}',
            type: 6,
            questionDepotId: '${questionDepotId}',
            'questionDepot[ id ]': '${questionDepotId}',
            'questionDepot[ name ]': '${questionDepotName}',
            organizationId: '${organizationId}',
            affectedType: 1,
            difficulty: 3,
            depotEdit: 1
          }
    extract:
    validate:
       -   eq:  ['$.status', '0']

-   name: 【普通试题】——新增排序题
    request:
        url: api/v1/exam/question
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
            {
              value: [{'value':'A','valueText':'A','name':0,'type':8},{'value':'B','valueText':'B', 'name':1,
                       'type':8},{'value':'C','valueText':'C','name':2,'type':8},{'value':'D','valueText':'D',
                       'name':3,'type':8},{"value":"0|1|2|3|","name":0,"type":0}],
              'questionAttrs[0][value]': 'A',
              'questionAttrs[0][valueText]': 'A',
              'questionAttrs[0][name]': 0,
              'questionAttrs[0][type]': 8,
              'questionAttrs[1][value]': 'B',
              'questionAttrs[1][valueText]': 'B',
              'questionAttrs[1][name]': 1,
              'questionAttrs[1][type]': 8,
              'questionAttrs[2][value]': 'C',
              'questionAttrs[2][valueText]': 'C',
              'questionAttrs[2][name]': 2,
              'questionAttrs[2][type]': 8,
              'questionAttrs[3][value]': 'D',
              'questionAttrs[3][valueText]': 'D',
              'questionAttrs[3][name]': 3,
              'questionAttrs[3][type]': 8,
              'questionAttrs[4][value]': '0|1|2|3|',
              'questionAttrs[4][name]': 0,
              'questionAttrs[4][type]': 0,
              content: '${questionDepotName}-排序题1',
              contentText: '${questionDepotName}-排序题1',
              score: 1000,
              type: 8,
              questionDepotId: '${questionDepotId}',
              'questionDepot[id]': '${questionDepotId}',
              'questionDepot[name]': '${questionDepotName}',
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              parsing: '试题解析',
              parsingText: '试题解析',
              difficulty: 3,
              depotEdit: 0
            }
    extract:
      paixuid: $.id
      paixuname: $.content
    validate:
      -   eq:  ['$.type', '8']

-   name: 【普通试题】——修改排序题
    request:
        url: api/v1/exam/question/${paixuid}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            value: [{"value":"A","valueText":"A","name":0,"type":8},{"value":"B","valueText":"B","name":1,"type":8},
                      {"value":"C","valueText":"C","name":2,"type":8},{"value":"D","valueText":"D","name":3,"type":8},
                      {"value":"0|1|2|3|","name":0,"type":0}],
            'questionAttrs[0][value]': 'A',
            'questionAttrs[0][valueText]': 'A',
            'questionAttrs[0][name]': 0,
            'questionAttrs[0][type]': 8,
            'questionAttrs[1][value]': 'B',
            'questionAttrs[1][valueText]': 'B',
            'questionAttrs[1][name]': 1,
            'questionAttrs[1][type]': 8,
            'questionAttrs[2][value]': 'C',
            'questionAttrs[2][valueText]': 'C',
            'questionAttrs[2][name]': 2,
            'questionAttrs[2][type]': 8,
            'questionAttrs[3][value]': 'D',
            'questionAttrs[3][valueText]': 'D',
            'questionAttrs[3][name]': 3,
            'questionAttrs[3][type]': 8,
            'questionAttrs[4][value]': '0|1|2|3|',
            'questionAttrs[4][name]': 0,
            'questionAttrs[4][type]': 0,
            content: '${paixuname}',
            contentText: '${paixuname}',
            score: 1000,
            id: '${originalQuestionId}',
            type: 8,
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            parsing: '试题解析',
            parsingText: '试题解析',
            affectedType: 1,
            difficulty: 3,
            organizationId: '${organizationId}',
            depotEdit: 1
          }
    extract:
    validate:
       -   eq:  ['$.status', '0']

-   name: 【普通试题】——试题导出
    request:
        url: api/v1/system/grant/check-switch
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        data:
    extract:
    validate:
       -   eq:  ['(.*)', 'true']

-   name: 【普通试题】——删除单选题
    request:
        url: api/v1/exam/question/${danxuanid}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            id: '${danxuanid}',
            name: '${danxuanname}'
            }
    extract:
    validate:
       -   eq:  ['$.id', '${danxuanid}']

-   name: 【普通试题】——删除多选题
    request:
        url: api/v1/exam/question/${duoxuanid}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            id: '${duoxuanid}',
            name: '${duoxuanname}'
            }
    extract:
    validate:
       -   eq:  ['$.id', '${duoxuanid}']

-   name: 【普通试题】——删除判断题
    request:
        url: api/v1/exam/question/${panduanid}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            id: '${panduanid}',
            name: '${panduanname}'
            }
    extract:
    validate:
       -   eq:  ['$.id', '${panduanid}']

-   name: 【普通试题】——删除填空题
    request:
        url: api/v1/exam/question/${tiankongid}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            id: '${tiankongid}',
            name: '${tiankongname}'
            }
    extract:
    validate:
       -   eq:  ['$.id', '${tiankongid}']

-   name: 【普通试题】——删除问答题
    request:
        url: api/v1/exam/question/${wendaid}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            id: '${wendaid}',
            name: '${wendaname}'
            }
    extract:
    validate:
       -   eq:  ['$.id', '${wendaid}']

-   name: 【普通试题】——删除阅读理解题
    request:
        url: api/v1/exam/question/${yuedulijieid}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            id: '${yuedulijieid}',
            name: '${yuedulijiename}'
            }
    extract:
    validate:
       -   eq:  ['$.id', '${yuedulijieid}']

-   name: 【普通试题】——删除排序题
    request:
        url: api/v1/exam/question/${paixuid}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            id: '${paixuid}',
            name: '${paixuname}'
            }
    extract:
    validate:
       -   eq:  ['$.id', '${paixuid}']

-   name: 【普通试题】——试题批量导入
    request:
        url: api/v1/human/file/upload-excel-file
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
        params:
        files:
          {
            file: 'exam/${ent_name}_试题导入模板.xlsx'
          }
    extract:
       fileid_1: $.[0].id
    validate:
       -   eq:  ['$.[0].filename', '${ent_name}_试题导入模板.xlsx']

-   name: 【普通试题】——批处理异步导入
    request:
        url: api/v1/exam/question/batch-async-import
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/question-depot
        params:
        data:
          {
            fileId: '${fileid_1}',
            organizationId: '${organizationId}',
            type: 1,
            uri: 'exam/question-depot',
            token: '${admin_token}'
          }
    extract:
    validate:
       -   eq:  [Status Code, 200]

-   name: 【普通试题】——试题批量更新
    request:
        url: api/v1/human/file/upload-excel-file
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
        params:
        files:
          {
            file: 'exam/${ent_name}_试题批量更新模板.xlsx'
          }
    extract:
      fileid_2: $.[0].id
    validate:
       -   eq:  ['$.[0].filename', '${ent_name}_试题批量更新模板.xlsx']

-   name: 【普通试题】——批处理异步更新
    request:
        url: api/v1/exam/question/batch-async-update
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/question-depot
        params:
        data:
          {
            fileId: '${fileid_2}',
            type: 1,
            organizationId: '${organizationId}',
            token: '${admin_token}'
          }
    extract:
    validate:
       -   eq:  [Status Code, 200]

-   name: 【普通试题】——点击试题目录修改
    request:
        url: api/v1/exam/question-depot/${questionDepotId}
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
            {
              organizationId: '${organizationId}',
              'organization[id]': '${organizationId}',
              'organization[name]': '${organizationName}',
              'organization[state]': 1,
              depotShare: 1,
              type: 1
            }
    extract:
    validate:
       -   eq:  ['$.id', '${questionDepotId}']

-   name: 【普通试题】——提交试题目录修改
    request:
        url: api/v1/exam/question-depot/${questionDepotId}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        data:
            {
              name: '${questionDepotName}',
              id: '${questionDepotId}',
              organizationId: '${organizationId}',
              code: '${code}',
              sequence: 1,
              state: 0,
              authToLower: 0,
              depotAuthToLower: 0,
              type: 1
            }
    extract:
    validate:
       -   eq:  ['$.id', '${questionDepotId}']

-   name: 【普通试题】——试题目录导出
    request:
        url: api/v1/exam/question-depot/export
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
        params:
          {
            organizationId: '${organizationId}',
            deptType: 1,
            exportType: 2,
            admin_token: '${admin_token}'
          }
    extract:
    validate:
       -   eq:  [Status Code, 200]

-   name: 【普通试题】——查看任务队列
    request:
        url: api/v1/human/export-task/find-export-tasks
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
          {
            businessTypes: '4,25,30',
            page: 1,
            pageSize: 10,
          }
    extract:
        exportid_1: $.items[0].id
        exportid_2: $.items[1].id
    validate:
       -   eq:  ['$.recordCount', '2']
       -   eq:  ['$.items[0].failCount', '0']
       -   eq:  ['$.items[1].failCount', '0']

-   name: 【普通试题】——删除队列更新任务
    request:
        url: api/v1/human/export-task/${exportid_1}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
          {
            id: '${exportid_1}'
          }
    extract:
    validate:
       -   eq:  ['(.*)', '1']

-   name: 【普通试题】——删除队列导入任务
    request:
        url: api/v1/human/export-task/${exportid_2}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
          {
            id: '${exportid_2}'
          }
    extract:
    validate:
       -   eq:  ['(.*)', '1']

-   name: 【普通试题】——查询目录试题
    request:
        url: api/v1/exam/question
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        params:
          {
            questionDepotId: '${questionDepotId}',
            'questionDepot[id]': '${questionDepotId}',
            'questionDepot[name]': '${questionDepotName}',
            'questionDepot[path]': '${questionDepotId},',
            'questionDepot[state]': 1,
            organizationId: '${organizationId}',
            'organization[id]': '${organizationId}',
            'organization[name]': '${organizationName}',
            'organization[state]': 1,
            forbidden: 0,
            depttype: 1,
            url: 'exam/question-depot',
            depotPath: '${questionDepotId},',
            page: 1,
            pageSize: 100
          }
    extract:
        timuId1: $.items[0].id
        timuId2: $.items[1].id
        timuId3: $.items[2].id
        timuId4: $.items[3].id
        timuId5: $.items[4].id
        timuId6: $.items[5].id
        timuId7: $.items[6].id
        timuId8: $.items[7].id
        timuId9: $.items[8].id
        timuId10: $.items[9].id
        timuId11: $.items[10].id
        timuId12: $.items[11].id
        timuId13: $.items[12].id
        timuId14: $.items[13].id
        timuId15: $.items[14].id
        timuId16: $.items[15].id
        timuId17: $.items[16].id
        timuId18: $.items[17].id
        timuId19: $.items[18].id
        timuId20: $.items[19].id
        timuId21: $.items[20].id
        timuId22: $.items[21].id
        timuId23: $.items[22].id
        timuId24: $.items[23].id
        timuId25: $.items[24].id
        timuId26: $.items[25].id
        timuId27: $.items[26].id
        timuId28: $.items[27].id
        timuId29: $.items[28].id
        timuId30: $.items[29].id
        timuId31: $.items[30].id
        timuId32: $.items[31].id
        timuId33: $.items[32].id
        timuId34: $.items[33].id
        timuId35: $.items[34].id
        timuId36: $.items[35].id
    validate:
       -   eq:  ['$.recordCount', '36']

-   name: 【普通试题】——发布导入试题
    request:
        url: api/v1/exam/question/publish
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
             ids: '${timuId1},${timuId2},${timuId3},${timuId4},${timuId5},${timuId6},${timuId7},${timuId8},${timuId9},${timuId10},${timuId11},${timuId12},${timuId13},${timuId14},${timuId15},${timuId16},${timuId17},${timuId18},${timuId19},${timuId20},${timuId21},${timuId22},${timuId23},${timuId24},${timuId25},${timuId26},${timuId27},${timuId28},${timuId29},${timuId30},${timuId31},${timuId32},${timuId33},${timuId34},${timuId35},${timuId36}',
             status: 1
          }
    extract:
    validate:
       -   eq:  ['$.id', '${timuId1},${timuId2},${timuId3},${timuId4},${timuId5},${timuId6},${timuId7},${timuId8},${timuId9},${timuId10},${timuId11},${timuId12},${timuId13},${timuId14},${timuId15},${timuId16},${timuId17},${timuId18},${timuId19},${timuId20},${timuId21},${timuId22},${timuId23},${timuId24},${timuId25},${timuId26},${timuId27},${timuId28},${timuId29},${timuId30},${timuId31},${timuId32},${timuId33},${timuId34},${timuId35},${timuId36}']

-   name: 【普通试题】——删除导入试题
    request:
        url: api/v1/exam/question/batchDelete
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
        data:
    sql_statement:
        -  sql:  ['DELETE FROM exam.t_question WHERE f_question_depot_id = "${questionDepotId}"', 36]
        -  sql:  ['SELECT * FROM exam.t_question WHERE f_question_depot_id = "${questionDepotId}"', 0]
    extract:
    validate:
      -   eq:  [Status Code, 422]

-   name: 【普通试题】——删除试题目录
    request:
        url: api/v1/exam/question-depot/${questionDepotId}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/question-depot
          content-type: application/x-www-form-urlencoded; charset=UTF-8
        data:
          {
            'id[]': '${questionDepotId}',
            name: '${questionDepotName}'
          }
    extract:
    validate:
       -   eq:  ['$.id', '${questionDepotId}']
