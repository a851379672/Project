allure:
    {
      'allure_descrption': '',
      'allure_suite': '管理端',
      'allure_sub_suite': '考试模块',
      'allure_feature': '管理端',
      'allure_story': '考试模块'
    }
test:
-   name: 【公告配置】——查询公告
    request:
        url: api/v1/exam/announcement/page
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/notices
        body:
            {
              page: 1,
              pageSize: 10
            }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.recordCount', '1']
        -   eq:  ['$.items[0].title', '${ent_name}公告']

-   name: 【公告配置】——查询公告开放时间
    request:
        url: api/v1/exam/exam/remote-startTime
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/notices
        body:
    sql_statement:
    extract:
    validate:
        -   eq:  [Status Code, 200]

-   name: 【公告配置】——查询授权组织
    request:
        url: api/v1/system/organization/granted-organization
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/notices
        body:
            {
              uri: 'exam/notices',
              supportMore: 'true'
            }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.[0].status]', '1']

-   name: 【公告配置】——查询组织操作类型
    request:
        url: api/v1/system/grant/find-organization-operatortype
        method: GET
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/notices
        body:
            {
              uri: 'exam/notices'
            }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.${organizationId},', '0,1,2,3,4']

-   name: 【公告配置】——新增公告
    request:
        url: api/v1/exam/announcement
        method: POST
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/notices
        body:
            {
              title: '${ent_name}公告1',
              description: '这里是${ent_name}公告1',
              organizationId-text: 'preer',
              organizationId: '${organizationId}',
              startTime: '$diy_time{*, *, *, *, *}',
              endTime: '$diy_time{*, *, +1, 09, 00}'
            }
    sql_statement:
    extract:
        noticesId: '$.id'
    validate:
        -   eq:  ['$.title,', '${ent_name}公告1']

-   name: 【公告配置】——置顶公告
    request:
        url: api/v1/exam/announcement/top/${noticesId}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/notices
        body:
            {
              id: '${noticesId}',
              title: '${ent_name}公告1'
            }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.topStatus,', '1']

-   name: 【公告配置】——取消置顶公告
    request:
        url: api/v1/exam/announcement/remove-top/${noticesId}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/notices
        body:
            {
              id: '${noticesId}',
              title: '${ent_name}公告1'
            }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.topStatus,', '0']

-   name: 【公告配置】——修改公告
    request:
        url: api/v1/exam/announcement/${noticesId}
        method: PUT
        headers:
          Authorization: Bearer__${admin_token}
          uri: exam/notices
        body:
            {
              title: '${ent_name}公告2',
              description: '这里是${ent_name}公告2',
              organizationId-text: '${ent_name}',
              organizationId: '${organizationId}',
              startTime: '$diy_time{*, *, *, *, *}',
              endTime: '$diy_time{*, *, +1, 09, 00}',
              id: '${noticesId}'
            }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.title,', '${ent_name}公告2']
        -   eq:  ['$.description,', '这里是${ent_name}公告2']

-   name: 【公告配置】——删除公告
    request:
        url: api/v1/exam/announcement/${noticesId}
        method: DELETE
        headers:
          Authorization: Bearer__${admin_token}
          content-type: application/x-www-form-urlencoded; charset=UTF-8
          uri: exam/notices
        body:
            {
              id: '${noticesId}',
              title: '${ent_name}公告1'
            }
    sql_statement:
    extract:
    validate:
        -   eq:  ['$.id,', '${noticesId}']
