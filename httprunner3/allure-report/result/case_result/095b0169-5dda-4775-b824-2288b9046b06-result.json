{"name": "【普通试题】-删除导入试题", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_case.test_case.TestClass object at 0x0000018ADCB44820>\napi_data = {'allure': {'allure_descrption': '【普通试题】-删除导入试题', 'allure_feature': '管理端', 'allure_story': '考试模块', 'allure_sub_suite':...r__${access_token}', 'uri': 'exam/question-depot'}, 'method': 'POST', 'url': '/api/v1/exam/question/batchDelete'}, ...}\n\n    @pytest.mark.parametrize('api_data', ReadData().return_data())\n    def test_run(self, api_data):\n        \"\"\"\n        :param api_data\n        :return: report_content\n        \"\"\"\n    \n        \"\"\"数据处理\"\"\"\n        request_data = eval(self.deal_with.replace_(api_data['request']))\n        request_data['url'] = self.file['ent_url'] + request_data['url']\n        if request_data.get('files'):\n            request_data['files'] = data_depend.file_depend(request_data)\n        if request_data['headers'].get('content-type') and 'urlencoded' in request_data['headers']['content-type']:\n            request_data['data'] = urlencode(request_data['data'])\n        allure_(api_data)\n    \n        \"\"\"日志输出\"\"\"\n        response = requests.session().request(**request_data)\n        get_req_resp_record(response)\n    \n        \"\"\"sql执行\"\"\"\n        sql_statement = api_data.get('sql_statement')\n        if sql_statement:\n>           [MysqlOperate(value[0]).execute_sql(value[1], self.deal_with) for sql in sql_statement\n             for value in sql.values()]\n\ntest_case\\test_case.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_case\\test_case.py:55: in <listcomp>\n    [MysqlOperate(value[0]).execute_sql(value[1], self.deal_with) for sql in sql_statement\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.mysql_operate.MysqlOperate object at 0x0000018ADC917340>\nvalue = 36\ndeal_with = <common.data_depend.DataDepend object at 0x0000018ADCB20040>\n\n    def execute_sql(self, value, deal_with):\n        \"\"\"\n        执行sql\n        :param: value: 预期值\n        :return:\n        \"\"\"\n        if deal_with.replace_(self.sql):\n            self.sql = deal_with.replace_(self.sql)\n        result = self.judge.handler(self.cursor, self.sql, self.db)\n>       assert result == value\nE       AssertionError\n\ncommon\\mysql_operate.py:50: AssertionError"}, "attachments": [{"name": "stderr", "source": "fb9c5e0b-a859-4d5d-a195-672a159cffdb-attachment.txt", "type": "text/plain"}], "start": 1636368889785, "stop": 1636368890114, "uuid": "cbeeb063-72b5-4b58-8f8c-71f30769887e", "historyId": "a1041ee73bfb3bad3b8727a4674ffc1d", "testCaseId": "1bdc9a45fb40975afe3f97ac65201407", "fullName": "test_case.test_case.TestClass#test_run", "labels": [{"name": "suite", "value": "【普通试题】-删除导入试题"}, {"name": "subSuite", "value": "考试模块"}, {"name": "feature", "value": "管理端"}, {"name": "story", "value": "考试模块"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestClass"}, {"name": "host", "value": "SZLX"}, {"name": "thread", "value": "18288-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_case"}], "links": [{"type": "link", "url": "/api/v1/exam/question/batchDelete", "name": "/api/v1/exam/question/batchDelete"}]}